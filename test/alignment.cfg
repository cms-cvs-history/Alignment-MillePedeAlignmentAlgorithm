# last update on $Date: 2008/07/14 18:20:43 $ by $Author: flucke $
process Alignment = {
    
    # initialize  MessageLogger
#    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    # This whole mess does not really work - I do not get rid of FwkReport and TrackProducer info...
    service = MessageLogger { 
	untracked vstring destinations = { "alignment" }# {, "cout" }
	untracked vstring statistics = { "alignment" } #{, "cout" }
	untracked vstring categories = { "Alignment", "LogicError", "FwkReport", "TrackProducer"}
	#untracked PSet FwkReport     = { untracked string threshold = "WARNING" }
	#untracked PSet TrackProducer = { untracked string threshold = "WARNING" }
	
	untracked PSet cout    = { 
	    untracked string threshold = "DEBUG" # "ERROR" 
	    untracked PSet FwkReport = {
		untracked string threshold = "ERROR" 
	    }
	    untracked PSet TrackProducer = {
		untracked string threshold = "ERROR" 
	    }
	    #      	untracked bool noLineBreaks = true 
	}
	untracked PSet alignment  = { 
	    untracked string threshold = "DEBUG" 
	    untracked PSet INFO = { untracked int32 limit = 10 }
	    untracked PSet WARNING = { untracked int32 limit = 10 }
	    untracked PSet ERROR = { untracked int32 limit = -1 }
	    untracked PSet DEBUG = { untracked int32 limit = -1 }
	    untracked PSet Alignment = { untracked int32 limit = -1}
	    untracked PSet LogicError = { untracked int32 limit = -1}
	    # untracked bool noLineBreaks = true 
	}
    }
    
    # initialize magnetic field
    include "Configuration/StandardSequences/data/MagneticField.cff"   
# TIF field 0 T:
#   include "MagneticField/Engine/data/uniformMagneticField.cfi"
#   es_prefer magfield = XMLIdealGeometryESSource {}
#   es_prefer = UniformMagneticFieldESProducer{}
#    replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
 
    # ideal geometry and interface
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    # for Muon: include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

    include "Configuration/StandardSequences/data/FrontierConditions_GlobalTag.cff"    
    replace GlobalTag.globaltag = "IDEAL_v1::All" # take your favourite
#    # if alignment constants not from global tag, add this
#    include "CondCore/DBCommon/data/CondDBSetup.cfi"
#    es_source trackerAlignment = PoolDBESSource {
#	using CondDBSetup
#	string connect="frontier://FrontierProd/CMS_COND_21X_ALIGNMENT"
#	string timetype = "runnumber"
#	VPSet toGet = 
#	{
#	    { string record = "TrackerAlignmentRcd"      
#             string tag = " TrackerIdealGeometry210_mc" },
#	    { string record = "TrackerAlignmentErrorRcd"
#             string tag = "TrackerIdealGeometryErrors210_mc" }
#	}
#    }
#    es_prefer trackerAlignment = PoolDBESSource {}


    include "RecoVertex/BeamSpotProducer/data/BeamSpot.cfi"
    # track selection for alignment
    include "Alignment/CommonAlignmentProducer/data/AlignmentTrackSelector.cfi"
    replace AlignmentTrackSelector.src = generalTracks # ALCARECOTkAlMinBias #  adjust to input file
    replace AlignmentTrackSelector.ptMin   = 2. # 10.
    # replace AlignmentTrackSelector.ptMax   = 999.
    replace AlignmentTrackSelector.etaMin  = -5. # -2.4
    replace AlignmentTrackSelector.etaMax  =  5. # 2.4
    replace AlignmentTrackSelector.nHitMin = 9 # 8
    replace AlignmentTrackSelector.chi2nMax= 100. # 999999.
    replace AlignmentTrackSelector.applyNHighestPt = true #false
    replace AlignmentTrackSelector.nHighestPt = 2
    # replace AlignmentTrackSelector.applyChargeCheck = true
    # replace AlignmentTrackSelector.minHitChargeStrip = 50.
    # needs RECO files:
    # replace AlignmentTrackSelector.applyIsolationCut = true 
    # replace AlignmentTrackSelector.minHitIsolation = 0.8
    
    # Alignment producer
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
    #replace AlignmentProducer.tjTkAssociationMapTag = cosmictrackfinder # default is TrackRefitter
    # MisalignmentScenarioSettings is a block from Scenario.cff from AlignmentProducer.cff:
    # replace MisalignmentScenarioSettings.setError = false # no APE for refitter (not recomended)

    replace AlignmentProducer.ParameterBuilder.Selector = {
	vstring alignParams = {
	    # 6 parameters for larger structures, pixel as reference
	    "PixelHalfBarrels,rrrrrr",
	    "TrackerTOBHalfBarrel,111111",
	    "TrackerTIBHalfBarrel,111111",
	    "TrackerTECEndcap,111111",
	    "TrackerTIDEndcap,111111",
	    # 4 params for double sided strip barrel and pixel
	    "PixelDets,111001",
	    "BarrelDetsDS,111001",
	    "TECDets,111001,endCapDS",
	    "TIDDets,111001,endCapDS",
	    # 3 params for single sided barrel
	    "BarrelDetsSS,101001",
	    "TECDets,101001,endCapSS",
	    "TIDDets,101001,endCapSS"
# very simple scenario for testing
#	    # 6 parameters for larger structures, pixel as reference
#	    "PixelHalfBarrels,ffffff",
#	    "TrackerTOBHalfBarrel,111111",
#	    "TrackerTIBHalfBarrel,111111",
#	    "TrackerTECEndcap,ffffff",
#	    "TrackerTIDEndcap,ffffff" 
	}
        PSet endCapSS = {
            vdouble etaRanges = {}  vdouble phiRanges = {} vdouble zRanges = {}
	    vdouble rRanges   = {40., 60., 75., 999.}
	    vdouble xRanges = {}  vdouble yRanges = {}
        }
        PSet endCapDS = {
            vdouble etaRanges = {}  vdouble phiRanges = {} vdouble zRanges = {}
	    vdouble rRanges   = {0., 40., 60., 75.}
	    vdouble xRanges = {}  vdouble yRanges = {}
        }
    }
    # replace AlignmentProducer.doMuon = true # to align muon system
    replace AlignmentProducer.doMisalignmentScenario = false #true
    # If the above is true, you might want to choose the scenario:
    #    include "Alignment/TrackerAlignment/data/Scenarios.cff
    #    replace AlignmentProducer.MisalignmentScenario = {
    #	    using TrackerSurveyLASOnlyScenario
    #    }
    replace AlignmentProducer.applyDbAlignment = true #false
# monitor not strictly needed:
#    service = TFileService {string fileName = "histograms.root"}
#    replace AlignmentProducer.monitorConfig = {
#	untracked vstring monitors = {"AlignmentMonitorGeneric"}
#	untracked PSet AlignmentMonitorGeneric = {
#	}
#    }

    replace AlignmentProducer.algoConfig = {
	using MillePedeAlignmentAlgorithm
    }
    replace MillePedeAlignmentAlgorithm.mode = "full" #"full" # "pedeSteer" #"pede"
    replace MillePedeAlignmentAlgorithm.mergeBinaryFiles = {}
    replace MillePedeAlignmentAlgorithm.monitorFile = "millePedeMonitor.root"
    replace MillePedeAlignmentAlgorithm.binaryFile = "milleBinaryISN.dat"

    #    replace MillePedeAlignmentAlgorithm.fileDir = "/tmp/flucke/test"
    #    replace MillePedeAlignmentAlgorithm.pedeReader.fileDir = "./"
    #    replace MillePedeAlignmentAlgorithm.treeFile = "treeFile_hiera131d.root"
    #    default is sparsGMRES                                    <method>  n(iter)  Delta(F)
    #    replace MillePedeAlignmentAlgorithm.pedeSteerer.method = "inversion  9  0.8"
    #    replace MillePedeAlignmentAlgorithm.pedeSteerer.options = {
    #	"entries 100",
    #	"chisqcut  20.0  4.5" # "outlierdownweighting 3", "dwfractioncut 0.1" 
    #    }
    #    replace MillePedeAlignmentAlgorithm.TrajectoryFactory = {
    #      using BzeroReferenceTrajectoryFactory # OR using TwoBodyDecayTrajectoryFactory OR using...
    #    }
    # replace MillePedeAlignmentAlgorithm.max2Dcorrelation = 2. # to switch off
    # FIXME: Need updated presigma scenarios (or implement use of survey object?)
    include "Alignment/MillePedeAlignmentAlgorithm/data/PresigmaScenarios.cff"
    replace MillePedeAlignmentAlgorithm.pedeSteerer.Presigmas += TrackerShortTermPresigmas.Presigmas
    
# refitting
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.src = "AlignmentTrackSelector"
    replace TrackRefitter.TrajectoryInEvent = true
    # beam halo propagation needs larger phi changes going from one TEC to another
    # replace MaterialPropagator.MaxDPhi = 1000.
# the following for refitting with analytical propagator (maybe for CRUZET?)
#    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cfi"
#    replace TrackRefitter.src = "AlignmentTrackSelector"
#    replace TrackRefitter.TrajectoryInEvent = true
#
#    include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"
#    include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"
#    include "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
#    include "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
#    include "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
#    include "TrackingTools/GeomPropagators/data/AnalyticalPropagator.cfi"
#    include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"
#    replace TrackRefitter.Propagator = "AnalyticalPropagator"
#    replace KFTrajectoryFitter.Propagator = "AnalyticalPropagator"
#    replace KFTrajectorySmoother.Propagator = "AnalyticalPropagator"
## Not to loose hits/tracks, we might want to open the allowed chi^2 contribution for single hits:
#    replace Chi2MeasurementEstimator.MaxChi2 = 50. # untested, default 30
#
#    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
#    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
#    include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
#    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
# end refitting with analytical propagator


    # input file
#    source = EmptySource {} # for pede only mode
#    untracked PSet maxEvents = {untracked int32 input = 0}
    source = PoolSource {
	untracked vstring fileNames = { 
	    #"file:aFile.root" #"rfio:/castor/cern.ch/cms/store/..."
            # relval file from CMSSW_2_1_0_pre8:
	    "/store/relval/2008/6/22/RelVal-RelValZMM-1213987236-IDEAL_V2-2nd/0004/04666D76-1941-DD11-9549-001617E30E28.root"
	}
	untracked uint32 skipEvents = 0
    }

    path p = { offlineBeamSpot, AlignmentTrackSelector, TrackRefitter }

#--- SAVE ALIGNMENT CONSTANTS TO DB --------------------------------
# Default in MPS is saving as alignment_MP.db. Uncomment next line not to save them.
# For a standalone (non-MPS) run, uncomment also the PoolDBOutputService part.
#    replace AlignmentProducer.saveToDB = false
#
#    include "CondCore/DBCommon/data/CondDBSetup.cfi"
#    service = PoolDBOutputService {
#	using CondDBSetup
#	untracked string timetype = "runnumber"
#	string connect = "sqlite_file:TkAlignment.db"
#	VPSet toPut = {
#	    { string record = "TrackerAlignmentRcd"      string tag = "testTag" },
#	    { string record = "TrackerAlignmentErrorRcd" string tag = "testTagAPE" }
#	}
#    }
#
# MPS needs next line as placeholder for pede .cfg:
#MILLEPEDEBLOCK


}
