# last update on $Date: 2007/01/26 11:25:03 $ by $Author: flucke $
process Alignment = {
    
    # initialize  MessageLogger
    # include "FWCore/MessageLogger/data/MessageLogger.cfi"
    # This whole mess does not really work - I do not get rid of FwkReport and TrackProducer info...
    service = MessageLogger { 
	untracked vstring destinations = { "alignment" , "cout" }
	untracked vstring statistics = { "alignment" , "cout" }
	untracked vstring categories = { "Alignment", "LogicError", "FwkReport", "TrackProducer"}
	#untracked PSet FwkReport     = { untracked string threshold = "WARNING" }
	#untracked PSet TrackProducer = { untracked string threshold = "WARNING" }

	untracked PSet cout    = { 
	    untracked string threshold = "DEBUG" # "ERROR" 
	    untracked PSet FwkReport = {
		untracked string threshold = "ERROR" 
	    }
	    untracked PSet TrackProducer = {
		untracked string threshold = "ERROR" 
	    }
	    #      	untracked bool noLineBreaks = true 
	}
	untracked PSet alignment  = { 
	    untracked string threshold = "DEBUG" 
	    untracked PSet INFO = { untracked int32 limit = 10 }
	    untracked PSet WARNING = { untracked int32 limit = 10 }
	    untracked PSet ERROR = { untracked int32 limit = -1 }
	    untracked PSet DEBUG = { untracked int32 limit = -1 }
	    untracked PSet Alignment = { untracked int32 limit = -1}
	    untracked PSet LogicError = { untracked int32 limit = -1}
	    # untracked bool noLineBreaks = true 
	}
    }
    
    # initialize magnetic field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    # ideal geometry and interface
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    # track selection for alignment
    module AlignmentTracks = AlignmentTrackSelectorModule {
	InputTag src = AlCaRecoCSA06ZMuMu # ctfWithMaterialTracks  # AlCaReco
	bool filter = false
	
	bool applyBasicCuts = true
	double ptMin   = 10. #5. 
	double ptMax   = 999.
	double etaMin  = -2.4.
	double etaMax  =  2.4.
	double phiMin  = -3.1416
	double phiMax  =  3.1416
	double nHitMin = 10
	double nHitMax = 99
	double chi2nMax= 999. #999999.
	
	bool applyNHighestPt = false
	int32 nHighestPt = 2
	
	bool applyMultiplicityFilter = true
	int32 minMultiplicity = 1
    }
    
    # Alignment producer
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"
    replace AlignmentProducer.ParameterBuilder.Selector = {
	vstring alignParams = {
# CSA06
#            "TOBDSRods,111111","TOBSSRodsLayers15,1ff111",
#            "TIBDSDets,111111","TIBSSDets,1ff111",
#	    "TOBSSRodsLayers66,ffffff",
#	    "PixelHalfBarrelLayers,ffffff"

# NOTE 2006/11 A
	    "PixelHalfBarrelLayers,ccc00c", # fix pixel
	    "BarrelRodsDS,111001,centralEta",      # 4 params for double sided barrel
	    "TIBRodsSS,1f1001,centralEta",         # fix global z/local y for single sided TIB...
	    "TOBRodsSSLayers15,1f1001,centralEta", # ...and TOB
	    "TOBRodsSSLayers66,cfc00c,centralEta"  # except of fixed last layer
# Layer level
#	    "BarrelLayersDS,111001,centralEta",      # 4 params for double sided barrel
#	    "TIBLayersSS,1f1001,centralEta",         # fix global z/local y for single sided TIB...
#	    "TOBLayersSSLayers15,1f1001,centralEta", # ...and TOB
#	    "TOBLayersSSLayers66,cfc00c,centralEta"  # except of fixed last layer

# NOTE 2006/11 B (?)
#	    "PixelHalfBarrelDets,ccc00c", # fix pixel
#	    "BarrelDetsDS,111001,centralEta",      # 4 params for double sided barrel
#	    "TIBDetsSS,1f1001,centralEta",         # fix global z/local y for single sided TIB...
#	    "TOBDetsSSLayers15,1f1001,centralEta", # ...and TOB
#	    "TOBDetsSSLayers66,cfc00c,centralEta"  # except of fixed last layer
	}
	PSet centralEta = {
	    vdouble etaRanges =  {-0.9, 0.9}
	    # empty array means no restriction:
	    vdouble zRanges = {}  vdouble rRanges = {}  vdouble phiRanges = {}
	}
    }

    replace AlignmentProducer.doMisalignmentScenario = true
    # replace AlignmentProducer.MisalignmentScenario.seed = 6543217
    MisalignmentScenarioSettings is a block from Scenario.cff from AlignmentProducer.cff:
    replace MisalignmentScenarioSettings.setError = false 
    replace AlignmentProducer.MisalignmentScenario.TPBs.scale = 0.
    replace AlignmentProducer.MisalignmentScenario.TPEs.scale = 0.
    replace AlignmentProducer.MisalignmentScenario.TECs.scale = 0.
    replace AlignmentProducer.MisalignmentScenario.TIDs.scale = 0.
    replace AlignmentProducer.MisalignmentScenario.TIBs.Dets = { double scale = 0.}
    replace AlignmentProducer.MisalignmentScenario.TOBs.Dets = { double scale = 0.}
#    include "Alignment/MillePedeAlignmentAlgorithm/test/myMisalignmentScenario.cff"
#    replace AlignmentProducer.MisalignmentScenario = {
##	using TrackerCSA06Scenario
#	using BarrelRodsSensitiveParFixedTOBLayer6Scenario
#    }


    replace AlignmentProducer.algoConfig = {
	# using MillePedeAlignmentAlgorithm
	string algoName = "MillePedeAlignmentAlgorithm"
	# possible modes: full, mille, pede, pedeSteer, pedeRun, pedeRead
	untracked string mode = "mille"

	untracked string fileDir = ""

 	string binaryFile = "milleBinary.dat"
        vstring mergeBinaryFiles = {}
	string treeFile   = "treeFile.root"
        vstring mergeTreeFiles = {} 
	untracked string monitorFile = "millePedeMonitor.root" # if empty: no monitoring...

	PSet pedeSteerer = {
	    string steerFile = "pedeSteer" # file without txt ending
	    untracked string pedeCommand = "~flucke/cms/pede/myWork_based_orig/pede -ilc6"
	    untracked string pedeDump = "pede.dump"
	}
	int32 minNumHits = 5 # minimum number of hits (with alignable parameters)
	bool  useTrackTsos = true # Tsos from track or from reference trajectory for global derivs
    }

    include "Alignment/CommonAlignmentProducer/data/AlignmentProducerRefitting.cff"
    replace TrackRefitter.src = "AlignmentTracks"
    
    # input file
#    source = EmptySource {untracked int32 maxEvents = 0}
    source = PoolSource { 
	include "Alignment/MillePedeAlignmentAlgorithm/test/files_AlCaReco_ZToMuMu-LowLumiPU.cff"
	untracked vstring fileNames = { 
#	    'rfio:/castor/cern.ch/user/f/flucke/alignment/AlCaReco/CMSSW_1_2_0/ZToMuMu-LowLumiPU/AlCaRecoZMuMu_1651_1800.root'
	}
 	untracked int32 maxEvents   = 200
	untracked uint32 skipEvents = 0
    }
    
    path p = { AlignmentTracks, TrackRefitter }
	
    # REPLACEME (needed for inserting replace statements by perl script!)

}
