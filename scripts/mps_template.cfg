# last update on $Date: 2008/02/15 16:23:51 $ by $Author: flucke $
process Alignment = {
    
    # initialize  MessageLogger
#    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    # This whole mess does not really work - I do not get rid of FwkReport and TrackProducer info...
    service = MessageLogger { 
	untracked vstring destinations = { "alignment.log" }
	untracked vstring statistics = { "alignment.log" }
	untracked vstring categories = { "Alignment", "LogicError", "FwkReport", "TrackProducer"}
	
	untracked PSet cout    = { 
	    untracked string threshold = "DEBUG" # "ERROR" 
	    untracked PSet FwkReport = {
		untracked string threshold = "ERROR" 
	    }
	    untracked PSet TrackProducer = {
		untracked string threshold = "ERROR" 
	    }
	}
	untracked PSet alignment.log  = { 
	    untracked string threshold = "DEBUG" 
	    untracked PSet INFO = { untracked int32 limit = 10 }
	    untracked PSet WARNING = { untracked int32 limit = 10 }
	    untracked PSet ERROR = { untracked int32 limit = -1 }
	    untracked PSet DEBUG = { untracked int32 limit = -1 }
	    untracked PSet Alignment = { untracked int32 limit = -1}
	    untracked PSet LogicError = { untracked int32 limit = -1}
	    # untracked bool noLineBreaks = true 
	}
    }
    
    # initialize magnetic field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
# TIF field 0 T:
#   include "MagneticField/Engine/data/uniformMagneticField.cfi"
#   es_prefer magfield = XMLIdealGeometryESSource {}
#   es_prefer = UniformMagneticFieldESProducer{}
#    replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
    
    # ideal geometry and interface
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    # track selection for alignment
    include "Alignment/CommonAlignmentProducer/data/AlignmentTrackSelector.cfi"
    replace AlignmentTracks.src = ctfWithMaterialTracksTIF #ctfWithMaterialTracksTIF for TIF
    replace AlignmentTracks.ptMin   = 10.
    replace AlignmentTracks.etaMin  = -5. # -2.4
    replace AlignmentTracks.etaMax  =  5. # 2.4
    replace AlignmentTracks.nHitMin = 8 # 6 for TIF
    # replace AlignmentTracks.nHitMin2D = 2  for TIF
    replace AlignmentTracks.chi2nMax= 4.
    # replace AlignmentTracks.applyMultiplicityFilter = true
    # replace AlignmentTracks.maxMultiplicity = 1 
    # replace AlignmentTracks.multiplicityOnInput = true
    # replace AlignmentTracks.applyNHighestPt = true
    # replace AlignmentTracks.nHighestPt = 2
    
    # needs more than just AlCaReco:
    # replace AlignmentTracks.applyIsolationCut = true 
    # replace AlignmentTracks.minHitIsolation = 0.8
    # replace AlignmentTracks.applyChargeCheck = true
    # replace AlignmentTracks.minHitChargeStrip = 50.

    # Alignment producer
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"

    replace AlignmentProducer.ParameterBuilder.Selector = {
 	vstring alignParams = {
	    # 6 parameters for larger structures, pixel as reference
	    "PixelHalfBarrels,rrrrrr",
	    "TrackerTOBHalfBarrel,111111",
	    "TrackerTIBHalfBarrel,111111",
	    "TrackerTECEndcap,111111",
	    "TrackerTIDEndcap,111111",
	    # 4 params for double sided strip barrel and pixel
	    "PixelDets,111001",
	    "BarrelDetsDS,111001",
	    "TECDets,111001,endCapDS",
	    "TIDDets,111001,endCapDS",
	    # 3 params for single sided barrel
	    "BarrelDetsSS,101001",
	    "TECDets,101001,endCapSS",
	    "TIDDets,101001,endCapSS"
	}
        PSet endCapSS = {
            vdouble etaRanges = {}  vdouble phiRanges = {} vdouble zRanges = {}
	    vdouble rRanges   = {40., 60., 75., 999.}
	    vdouble xRanges = {}  vdouble yRanges = {}
        }
        PSet endCapDS = {
            vdouble etaRanges = {}  vdouble phiRanges = {} vdouble zRanges = {}
	    vdouble rRanges   = {0., 40., 60., 75.}
	    vdouble xRanges = {}  vdouble yRanges = {}
        }
#	###################################
#	# TIF setup...
#	###################################
#	vstring alignParams = {
#	    "TOBHalfBarrels,ffffff,zIsPos",
#	    "TIBSSDets,101001,tifBarDets", 
#	    "TIBDSDets,111001,tifBarDets",
#	    "TOBSSDets,101001,tifBarDets", 
#	    "TOBDSDets,111001,tifBarDets"
#	}
#	# Barrel
#	PSet tifBarDets = {
#	    vdouble etaRanges = {}  vdouble phiRanges = {0.5, 1.7} #posA
#	    vdouble zRanges = {0.,999.}  vdouble rRanges = {}
#	    vdouble xRanges = {0., 75.}  vdouble yRanges = {}
#	}
#	# general
#	PSet zIsPos = {
#	    vdouble etaRanges = {}  vdouble phiRanges = {}
#	    vdouble zRanges = {0., 999.}  vdouble rRanges = {}
#	    vdouble xRanges = {}  vdouble yRanges = {}
#	}
    }

    replace AlignmentProducer.doMisalignmentScenario = false #true
    replace AlignmentProducer.MisalignmentScenario = {
	using TrackerSurveyLASOnlyScenario
    }
    replace AlignmentProducer.applyDbAlignment = false #true

#    # Database input service (here for TIF)
#    include "CondCore/DBCommon/data/CondDBSetup.cfi"
#    es_source trackerAlignment = PoolDBESSource {
#	using CondDBSetup
#	string connect="frontier://Frontier/CMS_COND_18X_ALIGNMENT"
#	string timetype = "runnumber"
#	VPSet toGet = 
#	{
#	    { string record = "TrackerAlignmentRcd"      string tag = "TIFpass4" },
#	    { string record = "TrackerAlignmentErrorRcd" string tag = "TIFpass4APE" }
#	}
#    }

    replace AlignmentProducer.monitorConfig = {
	untracked vstring monitors = {"AlignmentMonitorGeneric"}
	untracked PSet AlignmentMonitorGeneric = {
	    string outpath = "./"
	    string outfile = "histograms.root"
	    
	    bool collectorActive = false
	    int32 collectorNJobs = 0
	    string collectorPath = "./"
	}
    }

    replace AlignmentProducer.algoConfig = {
	using MillePedeAlignmentAlgorithm
    }
    replace MillePedeAlignmentAlgorithm.mode = "mille"
    replace MillePedeAlignmentAlgorithm.mergeBinaryFiles = {}
    replace MillePedeAlignmentAlgorithm.monitorFile = "millePedeMonitor.root"
    #    default is sparsGMRES                                    <method>  n(iter)  Delta(F)
    #    replace MillePedeAlignmentAlgorithm.pedeSteerer.method = "inversion  9  0.8"
    replace MillePedeAlignmentAlgorithm.pedeSteerer.options = {
    	"entries 100", "bandwidth 6",
    	"chisqcut  20.0  4.5" # "outlierdownweighting 3", "dwfractioncut 0.1" 
    }
#    replace MillePedeAlignmentAlgorithm.TrajectoryFactory = {
#	using BzeroReferenceTrajectoryFactory # for TIF
#	# OR using TwoBodyDecayTrajectoryFactory OR using...
#    }
#    replace TrajectoryFactoryBase.MaterialEffects = "None" # or "Combined", "MultipleScattering" or "EnergyLoss"
#    replace MillePedeAlignmentAlgorithm.max2Dcorrelation = 2. # if correlation >, 2D measurements get diagonalized
    # FIXME: Need updated presigma scenarios (or implement use of survey object?)
#    include "Alignment/MillePedeAlignmentAlgorithm/data/PresigmaScenarios.cff"
#    replace MillePedeAlignmentAlgorithm.pedeSteerer.Presigmas += TrackerShortTermPresigmas.Presigmas

# MPS needs next line as placeholder for pede .cfg:
#MILLEPEDEBLOCK

# refitting (classical way)
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.src = "AlignmentTracks"
    replace TrackRefitter.TrajectoryInEvent = true
    # needed for refit of hits:
    # include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff" # or Frontier or...
    # usually without refit: 
    replace TrackRefitter.TTRHBuilder = "WithoutRefit"# TransientTrackingRecHitBuilder: no refit of hits...
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilderWithoutRefit.cfi"
    # ... but matching for strip stereo should be redone: 
    replace ttrhbwor.Matcher = "StandardMatcher"
    # beam halo propagation needs larger phi changes going from one TEC to another
    # replace MaterialPropagator.MaxDPhi = 1000.

# refitting with analytical propagator (maybe for TIF?)
#    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cfi"
#    replace TrackRefitter.src = "AlignmentTracks"
#    replace TrackRefitter.TrajectoryInEvent = true
#
#    include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"
#    include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"
#    include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"
#    include "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
#    include "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
#    include "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
#    include "TrackingTools/GeomPropagators/data/AnalyticalPropagator.cfi"
#    replace TrackRefitter.Propagator = "AnalyticalPropagator"
#    replace KFTrajectoryFitter.Propagator = "AnalyticalPropagator"
#    replace KFTrajectorySmoother.Propagator = "AnalyticalPropagator"
#
#    include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
#    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
#    include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
#    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"

    # input file
    source = PoolSource {
	untracked vstring fileNames = { 
	    
	}
	untracked uint32 skipEvents = 0
    }

    path p = { AlignmentTracks, TrackRefitter }
}
